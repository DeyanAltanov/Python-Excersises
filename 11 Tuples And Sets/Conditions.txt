Count Same Values
You will be given a list of numbers. Write a program that prints the number of occurrences of each number.

Average Student Grades
Write a program, which reads a name of a student and their grades and adds them to the student record. 
Print the name of the students with their grades and their average grade. 
The order in which we print the result does not matter.

Record Unique Names
Write a program, which will take a list of names and print only the unique names in the list.
The order in which we print the result does not matter.

Parking Lot
Write a program that:
•	Records a car number for every car that enters the parking lot
•	Removes a car number when the car leaves the parking lot
The input will be the number of commands, which you will receive, and cars in the format: direction, car_number. Print the car numbers, which are still in the parking lot.
NOTE: The order in which we print the result does not matter.

Party
Many guests are invited and there are two types of them: Regular and VIP. When a guest comes, check if he/she exists in any of the two reservation lists.
All reservation numbers are 8 characters long and all VIP numbers will start with a digit.
First, you will be receiving the number of guests and their reservation numbers. After that, you will be receiving guests, who came to the party, until you receive the "END" command:
In the end, print the count of the guests who didn't come to the party and their reservation numbers. The VIP guests must be first.
Both the VIP and the Regular guests must be sorted in ascending order.

Unique Usernames
Write a program that reads from the console a sequence of N usernames and keeps a collection only of the unique ones. On the first line, you will receive an integer N. On the next N lines, you will receive a username. Print the collection on the console (the order does not matter).

Sets of Elements
Write a program that prints a set of elements. On the first line, you will receive two numbers - n and m, which represent the lengths of two separate sets. On the next n + m lines you will receive n numbers, which are the numbers in the first set, and m numbers, which are in the second set. Find all the unique elements that appear in both and print them on separate lines (the order does not matter).
For example:
Set with length n = 4: {1, 3, 5, 7}
Set with length m = 3: {3, 4, 5}
Set that contains all the elements that repeat in both sets -> {3, 5}

Periodic Table
Write a program that keeps all the unique chemical elements. On the first line you will be given a number n - the count of input lines that you are going to receive. On the next n lines, you will be receiving chemical compounds, separated by a single space. Your task is to print all the unique ones on separate lines (order does not matter).

Count Symbols
Write a program that reads a text from the console and counts the occurrences of each character in it. Print the results in alphabetical (lexicographical) order.

Phonebook
Write a program that receives info from the console about people and their phone numbers.
You are free to choose the way the data is entered; each entry should have a name and a number (both strings). If you receive a name that already exists in the phonebook, update its number.
After filling the phonebook, you will receive a number – N. Your program should be able to perform a search of a contact by name and print her details in format "{name} -> {number}". In case the contact isn't found, print "Contact {name} does not exist."

Longest Intersection
Write a program that finds the longest intersection. You will be given a number N. On the next N lines you will be given two ranges in the format: "{first_start},{first_end}-{second_start},{second_end}". Find the intersection of these two ranges and save the longest one of all N intersections. At the end print the numbers that are included in the longest intersection and its length in the format: "Longest intersection is {longest_intersection} with length {length_longest_intersection}"
Note: in each range, there will always be intersection. If there are two equal intersections, print the first one.

Battle of Names
You will receive a number N. On the next N lines, you will be receiving names. You must sum the ASCII values of each letter in the name and integer divide it to the number of the current row (starting from 1). Save the result to a set of either odd or even numbers, depending on if the devised number is an odd or even. After that, sum the values of each set.
•	If the sums of the two sets are equal, print the union values, separated by ", ". 
•	If the sum of the odd numbers is larger than the sum of the even numbers, print the different values, separated by ", ".
•	If the sum of the even numbers is larger than the sum of the odd numbers, print the symmetric different values, separated by ", ".
NOTE: On every operation, the starting set should be the odd set
